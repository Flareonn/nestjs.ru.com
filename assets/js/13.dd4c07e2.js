(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{404:function(t,r,e){"use strict";e.r(r);var n=e(54),a=Object(n.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"введение"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#введение"}},[t._v("#")]),t._v(" Введение")]),t._v(" "),e("p",[t._v("Nest (NestJS) - это фреймворк для построения эффективных, масштабируемых\n"),e("a",{attrs:{href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js"),e("OutboundLink")],1),t._v(" приложений на сервере.\nОн использует современный JavaScript, построен на основе и полностью\nподдерживает "),e("a",{attrs:{href:"http://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript"),e("OutboundLink")],1),t._v("\n(но при этом позволяет разработчикам писать на чистом JavaScript) и сочетает\nв себе элементы ООП (объектно-ориентированного программирования),\nФП (функционального программирования) и ФРП (функционально-реактивного программирования).")]),t._v(" "),e("p",[t._v("Под капотом Nest использует надежные фреймворки HTTP-серверов,\nтакие как "),e("a",{attrs:{href:"https://expressjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Express"),e("OutboundLink")],1),t._v(" (по умолчанию) и, по желанию,\nможет быть настроен на использование "),e("a",{attrs:{href:"https://github.com/fastify/fastify",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fastify"),e("OutboundLink")],1),t._v("!")]),t._v(" "),e("p",[t._v("Nest обеспечивает уровень абстракции над этими распространенными фреймворками\nNode.js (Express/Fastify), но также предоставляет их API непосредственно разработчику.\nЭто дает свободу в использовании огромного количества сторонних модулей,\nкоторые доступны для базовой платформы.")]),t._v(" "),e("h2",{attrs:{id:"философия"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#философия"}},[t._v("#")]),t._v(" Философия")]),t._v(" "),e("p",[t._v("В последние годы, благодаря Node.js, JavaScript стал очень популярен в Интернете\nкак для фронтенда, так и для бекенда. Это привело к появлению таких замечательных\nпроектов, как "),e("a",{attrs:{href:"https://angular.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular"),e("OutboundLink")],1),t._v(", "),e("a",{attrs:{href:"https://github.com/facebook/react",target:"_blank",rel:"noopener noreferrer"}},[t._v("React"),e("OutboundLink")],1),t._v("\nи "),e("a",{attrs:{href:"https://github.com/vuejs/vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue"),e("OutboundLink")],1),t._v(", которые повышают производительность разработчиков\nи позволяют создавать быстрые, тестируемые и расширяемые фронтенд-приложения. Однако,\nхотя для Node (и серверного JavaScript) существует множество превосходных библиотек,\nи инструментов, но они не решают главную проблему - "),e("strong",[t._v("Архитектуру")]),t._v(".")]),t._v(" "),e("p",[t._v("Nest предоставляет готовую архитектуру приложений, которая позволяет разработчикам\nи командам создавать высокотестируемые, масштабируемые, слабосвязанные и легко поддерживаемые\nприложения. Архитектура в значительной степени вдохновлена фреймворком Angular.")]),t._v(" "),e("h2",{attrs:{id:"установка"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#установка"}},[t._v("#")]),t._v(" Установка")]),t._v(" "),e("p",[t._v("Чтобы начать работу, вы можете либо создать проект с помощью "),e("a",{attrs:{href:"/cli/overview"}},[t._v("Nest CLI")]),t._v(",\nлибо клонировать стартовый проект (оба варианта дадут одинаковый результат).")]),t._v(" "),e("p",[t._v("Чтобы создать проект с помощью Nest CLI, выполните следующие команды.\nЭто создаст новую папку и базовую структуру для вашего проекта.\nСоздание нового проекта с помощью "),e("strong",[t._v("Nest CLI")]),t._v(" рекомендуется для начинающих пользователей.\nМы будем использовать именно этот подход далее, в разделе "),e("a",{attrs:{href:"first-steps"}},[t._v("Первые шаги")]),t._v(".")])])}),[],!1,null,null,null);r.default=a.exports}}]);